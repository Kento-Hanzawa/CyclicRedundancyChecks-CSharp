<#@ IntelliSenseLanguage processor="tangibleT4Editor" language="C#" #>
<# 
    var CRCRegulations = new (string CRCName, Type CRCType, int ByteSize, int BitSize, string ClassName)[]
    {
        ("CRC8" , typeof(byte)  , sizeof(byte)  , sizeof(byte)   * 8, "CRC8" ),
        ("CRC16", typeof(ushort), sizeof(ushort), sizeof(ushort) * 8, "CRC16"),
        ("CRC32", typeof(uint)  , sizeof(uint)  , sizeof(uint)   * 8, "CRC32"),
        ("CRC64", typeof(ulong) , sizeof(ulong) , sizeof(ulong)  * 8, "CRC64"),
    }; 
    
    // 参考：https://crccalc.com
    // 参考：http://www.sunshine2k.de/coding/javascript/crc/crc_js.html
    var CRC8Infos = new (string CRCName, byte Polynomial, byte InitialValue, byte FinalXorValue, bool ReversedData, bool ReversedOut, string ClassName)[]
    {
        ("CRC8"         , 0x07, 0x00, 0x00, false, false, "CRC8_STANDARD"),
        ("CRC8/CDMA2000", 0x9B, 0xFF, 0x00, false, false, "CRC8_CDMA2000"),
        ("CRC8/DARC"    , 0x39, 0x00, 0x00, true , true , "CRC8_DARC"    ),
        ("CRC8/DVB-S2"  , 0xD5, 0x00, 0x00, false, false, "CRC8_DVB_S2"  ),
        ("CRC8/EBU"     , 0x1D, 0xFF, 0x00, true , true , "CRC8_EBU"     ),
        ("CRC8/I-CODE"  , 0x1D, 0xFD, 0x00, false, false, "CRC8_I_CODE"  ),
        ("CRC8/ITU"     , 0x07, 0x00, 0x55, false, false, "CRC8_ITU"     ),
        ("CRC8/MAXIM"   , 0x31, 0x00, 0x00, true , true , "CRC8_MAXIM"   ),
        ("CRC8/ROHC"    , 0x07, 0xFF, 0x00, true , true , "CRC8_ROHC"    ),
        ("CRC8/WCDMA"   , 0x9B, 0x00, 0x00, true , true , "CRC8_WCDMA"   ),
    };

    var CRC16Infos = new (string CRCName, ushort Polynomial, ushort InitialValue, ushort FinalXorValue, bool ReversedData, bool ReversedOut, string ClassName)[]
    {
        ("CRC16/CCITT-FALSE", 0x1021, 0xFFFF, 0x0000, false, false, "CRC16_CCITT_FALSE"),
        ("CRC16/ARC"        , 0x8005, 0x0000, 0x0000, true , true , "CRC16_ARC"        ),
        ("CRC16/AUG-CCITT"  , 0x1021, 0x1D0F, 0x0000, false, false, "CRC16_AUG_CCITT"  ),
        ("CRC16/BUYPASS"    , 0x8005, 0x0000, 0x0000, false, false, "CRC16_BUYPASS"    ),
        ("CRC16/CDMA2000"   , 0xC867, 0xFFFF, 0x0000, false, false, "CRC16_CDMA2000"   ),
        ("CRC16/DDS-110"    , 0x8005, 0x800D, 0x0000, false, false, "CRC16_DDS_110"    ),
        ("CRC16/DECT-R"     , 0x0589, 0x0000, 0x0001, false, false, "CRC16_DECT_R"     ),
        ("CRC16/DECT-X"     , 0x0589, 0x0000, 0x0000, false, false, "CRC16_DECT_X"     ),
        ("CRC16/DNP"        , 0x3D65, 0x0000, 0xFFFF, true , true , "CRC16_DNP"        ),
        ("CRC16/EN-13757"   , 0x3D65, 0x0000, 0xFFFF, false, false, "CRC16_EN_13757"   ),
        ("CRC16/GENIBUS"    , 0x1021, 0xFFFF, 0xFFFF, false, false, "CRC16_GENIBUS"    ),
        ("CRC16/MAXIM"      , 0x8005, 0x0000, 0xFFFF, true , true , "CRC16_MAXIM"      ),
        ("CRC16/MCRF4XX"    , 0x1021, 0xFFFF, 0x0000, true , true , "CRC16_MCRF4XX"    ),
        ("CRC16/RIELLO"     , 0x1021, 0xB2AA, 0x0000, true , true , "CRC16_RIELLO"     ),
        ("CRC16/T10-DIF"    , 0x8BB7, 0x0000, 0x0000, false, false, "CRC16_T10_DIF"    ),
        ("CRC16/TELEDISK"   , 0xA097, 0x0000, 0x0000, false, false, "CRC16_TELEDISK"   ),
        ("CRC16/TMS37157"   , 0x1021, 0x89EC, 0x0000, true , true , "CRC16_TMS37157"   ),
        ("CRC16/USB"        , 0x8005, 0xFFFF, 0xFFFF, true , true , "CRC16_USB"        ),
        ("CRCA"             , 0x1021, 0xC6C6, 0x0000, true , true , "CRC_A"            ),
        ("CRC16/KERMIT"     , 0x1021, 0x0000, 0x0000, true , true , "CRC16_KERMIT"     ),
        ("CRC16/MODBUS"     , 0x8005, 0xFFFF, 0x0000, true , true , "CRC16_MODBUS"     ),
        ("CRC16/X-25"       , 0x1021, 0xFFFF, 0xFFFF, true , true , "CRC16_X_25"       ),
        ("CRC16/XMODEM"     , 0x1021, 0x0000, 0x0000, false, false, "CRC16_XMODEM"     ),
    };

    var CRC32Infos = new (string CRCName, uint Polynomial, uint InitialValue, uint FinalXorValue, bool ReversedData, bool ReversedOut, string ClassName)[]
    {
        ("CRC32"       , 0x04C11DB7, 0xFFFFFFFF, 0xFFFFFFFF, true , true , "CRC32_STANDARD"),
        ("CRC32/BZIP2" , 0x04C11DB7, 0xFFFFFFFF, 0xFFFFFFFF, false, false, "CRC32_BZIP2"   ),
        ("CRC32C"      , 0x1EDC6F41, 0xFFFFFFFF, 0xFFFFFFFF, true , true , "CRC32C"        ),
        ("CRC32D"      , 0xA833982B, 0xFFFFFFFF, 0xFFFFFFFF, true , true , "CRC32D"        ),
        ("CRC32/MPEG-2", 0x04C11DB7, 0xFFFFFFFF, 0x00000000, false, false, "CRC32_MPEG_2"  ),
        ("CRC32/POSIX" , 0x04C11DB7, 0x00000000, 0xFFFFFFFF, false, false, "CRC32_POSIX"   ),
        ("CRC32Q"      , 0x814141AB, 0x00000000, 0x00000000, false, false, "CRC32Q"        ),
        ("CRC32/JAMCRC", 0x04C11DB7, 0xFFFFFFFF, 0x00000000, true , true , "CRC32_JAMCRC"  ),
        ("CRC32/XFER"  , 0x000000AF, 0x00000000, 0x00000000, false, false, "CRC32_XFER"    ),
    };

    var CRC64Infos = new (string CRCName, ulong Polynomial, ulong InitialValue, ulong FinalXorValue, bool ReversedData, bool ReversedOut, string ClassName)[]
    {
        ("CRC64/ECMA-182", 0x42F0E1EBA9EA3693, 0x0000000000000000, 0x0000000000000000, false, false, "CRC64_ECMA_182"),
        ("CRC64/GO-ISO"  , 0x000000000000001B, 0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF, true , true , "CRC64_GO_ISO"  ),
        ("CRC64/WE"      , 0x42F0E1EBA9EA3693, 0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF, false, false, "CRC64_WE"      ),
        ("CRC64/XZ"      , 0x42F0E1EBA9EA3693, 0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF, true , true , "CRC64_XZ"      ),
    }; #>
//
// CyclicRedundancyChecks
// 
// このコードはテキストテンプレートファイル (.tt) によって作成されています。
// 変更をおこなう場合は、テキストテンプレートファイル (.tt) を編集してください。
//
