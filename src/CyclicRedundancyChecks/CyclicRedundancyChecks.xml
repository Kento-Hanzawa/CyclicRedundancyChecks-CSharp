<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CyclicRedundancyChecks</name>
    </assembly>
    <members>
        <member name="T:CyclicRedundancyChecks.Catalog">
            <summary>
            既定の CRC 仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> の実装を提供します。
            </summary>
            <remarks>このクラスの <see cref="T:CyclicRedundancyChecks.CRCSpec"/> は <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> の内容に準拠しています。</remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC3_GSM">
            <summary>
            <para>CRC アルゴリズム "CRC-3/GSM" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x03</b>, <i>InitialValue </i>: <b>0x00</b>, <i>FinalXorValue</i>: <b>0x07</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC3_ROHC">
            <summary>
            <para>CRC アルゴリズム "CRC-3/ROHC" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x03</b>, <i>InitialValue </i>: <b>0x07</b>, <i>FinalXorValue</i>: <b>0x00</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC4_G_704">
            <summary>
            <para>CRC アルゴリズム "CRC-4/G-704" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x03</b>, <i>InitialValue </i>: <b>0x00</b>, <i>FinalXorValue</i>: <b>0x00</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC4_INTERLAKEN">
            <summary>
            <para>CRC アルゴリズム "CRC-4/INTERLAKEN" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x03</b>, <i>InitialValue </i>: <b>0x0f</b>, <i>FinalXorValue</i>: <b>0x0f</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC5_EPC_C1G2">
            <summary>
            <para>CRC アルゴリズム "CRC-5/EPC-C1G2" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x009</b>, <i>InitialValue </i>: <b>0x009</b>, <i>FinalXorValue</i>: <b>0x000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC5_G_704">
            <summary>
            <para>CRC アルゴリズム "CRC-5/G-704" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x015</b>, <i>InitialValue </i>: <b>0x000</b>, <i>FinalXorValue</i>: <b>0x000</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC5_USB">
            <summary>
            <para>CRC アルゴリズム "CRC-5/USB" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x005</b>, <i>InitialValue </i>: <b>0x01f</b>, <i>FinalXorValue</i>: <b>0x01f</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC6_CDMA2000_A">
            <summary>
            <para>CRC アルゴリズム "CRC-6/CDMA2000-A" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x027</b>, <i>InitialValue </i>: <b>0x03f</b>, <i>FinalXorValue</i>: <b>0x000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC6_CDMA2000_B">
            <summary>
            <para>CRC アルゴリズム "CRC-6/CDMA2000-B" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x007</b>, <i>InitialValue </i>: <b>0x03f</b>, <i>FinalXorValue</i>: <b>0x000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC6_DARC">
            <summary>
            <para>CRC アルゴリズム "CRC-6/DARC" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x019</b>, <i>InitialValue </i>: <b>0x000</b>, <i>FinalXorValue</i>: <b>0x000</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC6_G_704">
            <summary>
            <para>CRC アルゴリズム "CRC-6/G-704" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x003</b>, <i>InitialValue </i>: <b>0x000</b>, <i>FinalXorValue</i>: <b>0x000</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC6_GSM">
            <summary>
            <para>CRC アルゴリズム "CRC-6/GSM" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x02f</b>, <i>InitialValue </i>: <b>0x000</b>, <i>FinalXorValue</i>: <b>0x03f</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC7_MMC">
            <summary>
            <para>CRC アルゴリズム "CRC-7/MMC" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x009</b>, <i>InitialValue </i>: <b>0x000</b>, <i>FinalXorValue</i>: <b>0x000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC7_ROHC">
            <summary>
            <para>CRC アルゴリズム "CRC-7/ROHC" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x04f</b>, <i>InitialValue </i>: <b>0x07f</b>, <i>FinalXorValue</i>: <b>0x000</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC7_UMTS">
            <summary>
            <para>CRC アルゴリズム "CRC-7/UMTS" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x045</b>, <i>InitialValue </i>: <b>0x000</b>, <i>FinalXorValue</i>: <b>0x000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC8_AUTOSAR">
            <summary>
            <para>CRC アルゴリズム "CRC-8/AUTOSAR" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x02f</b>, <i>InitialValue </i>: <b>0x0ff</b>, <i>FinalXorValue</i>: <b>0x0ff</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC8_BLUETOOTH">
            <summary>
            <para>CRC アルゴリズム "CRC-8/BLUETOOTH" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x0a7</b>, <i>InitialValue </i>: <b>0x000</b>, <i>FinalXorValue</i>: <b>0x000</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC8_CDMA2000">
            <summary>
            <para>CRC アルゴリズム "CRC-8/CDMA2000" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x09b</b>, <i>InitialValue </i>: <b>0x0ff</b>, <i>FinalXorValue</i>: <b>0x000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC8_DARC">
            <summary>
            <para>CRC アルゴリズム "CRC-8/DARC" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x039</b>, <i>InitialValue </i>: <b>0x000</b>, <i>FinalXorValue</i>: <b>0x000</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC8_DVB_S2">
            <summary>
            <para>CRC アルゴリズム "CRC-8/DVB-S2" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x0d5</b>, <i>InitialValue </i>: <b>0x000</b>, <i>FinalXorValue</i>: <b>0x000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC8_GSM_A">
            <summary>
            <para>CRC アルゴリズム "CRC-8/GSM-A" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x01d</b>, <i>InitialValue </i>: <b>0x000</b>, <i>FinalXorValue</i>: <b>0x000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC8_GSM_B">
            <summary>
            <para>CRC アルゴリズム "CRC-8/GSM-B" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x049</b>, <i>InitialValue </i>: <b>0x000</b>, <i>FinalXorValue</i>: <b>0x0ff</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC8_I_432_1">
            <summary>
            <para>CRC アルゴリズム "CRC-8/I-432-1" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x007</b>, <i>InitialValue </i>: <b>0x000</b>, <i>FinalXorValue</i>: <b>0x055</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC8_I_CODE">
            <summary>
            <para>CRC アルゴリズム "CRC-8/I-CODE" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x01d</b>, <i>InitialValue </i>: <b>0x0fd</b>, <i>FinalXorValue</i>: <b>0x000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC8_LTE">
            <summary>
            <para>CRC アルゴリズム "CRC-8/LTE" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x09b</b>, <i>InitialValue </i>: <b>0x000</b>, <i>FinalXorValue</i>: <b>0x000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC8_MAXIM_DOW">
            <summary>
            <para>CRC アルゴリズム "CRC-8/MAXIM-DOW" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x031</b>, <i>InitialValue </i>: <b>0x000</b>, <i>FinalXorValue</i>: <b>0x000</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC8_MIFARE_MAD">
            <summary>
            <para>CRC アルゴリズム "CRC-8/MIFARE-MAD" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x01d</b>, <i>InitialValue </i>: <b>0x0c7</b>, <i>FinalXorValue</i>: <b>0x000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC8_NRSC_5">
            <summary>
            <para>CRC アルゴリズム "CRC-8/NRSC-5" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x031</b>, <i>InitialValue </i>: <b>0x0ff</b>, <i>FinalXorValue</i>: <b>0x000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC8_OPENSAFETY">
            <summary>
            <para>CRC アルゴリズム "CRC-8/OPENSAFETY" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x02f</b>, <i>InitialValue </i>: <b>0x000</b>, <i>FinalXorValue</i>: <b>0x000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC8_ROHC">
            <summary>
            <para>CRC アルゴリズム "CRC-8/ROHC" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x007</b>, <i>InitialValue </i>: <b>0x0ff</b>, <i>FinalXorValue</i>: <b>0x000</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC8_SAE_J1850">
            <summary>
            <para>CRC アルゴリズム "CRC-8/SAE-J1850" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x01d</b>, <i>InitialValue </i>: <b>0x0ff</b>, <i>FinalXorValue</i>: <b>0x0ff</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC8_SMBUS">
            <summary>
            <para>CRC アルゴリズム "CRC-8/SMBUS" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x007</b>, <i>InitialValue </i>: <b>0x000</b>, <i>FinalXorValue</i>: <b>0x000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC8_TECH_3250">
            <summary>
            <para>CRC アルゴリズム "CRC-8/TECH-3250" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x01d</b>, <i>InitialValue </i>: <b>0x0ff</b>, <i>FinalXorValue</i>: <b>0x000</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC8_WCDMA">
            <summary>
            <para>CRC アルゴリズム "CRC-8/WCDMA" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x09b</b>, <i>InitialValue </i>: <b>0x000</b>, <i>FinalXorValue</i>: <b>0x000</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC10_ATM">
            <summary>
            <para>CRC アルゴリズム "CRC-10/ATM" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x0233</b>, <i>InitialValue </i>: <b>0x0000</b>, <i>FinalXorValue</i>: <b>0x0000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC10_CDMA2000">
            <summary>
            <para>CRC アルゴリズム "CRC-10/CDMA2000" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x03d9</b>, <i>InitialValue </i>: <b>0x03ff</b>, <i>FinalXorValue</i>: <b>0x0000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC10_GSM">
            <summary>
            <para>CRC アルゴリズム "CRC-10/GSM" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x0175</b>, <i>InitialValue </i>: <b>0x0000</b>, <i>FinalXorValue</i>: <b>0x03ff</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC11_FLEXRAY">
            <summary>
            <para>CRC アルゴリズム "CRC-11/FLEXRAY" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x0385</b>, <i>InitialValue </i>: <b>0x001a</b>, <i>FinalXorValue</i>: <b>0x0000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC11_UMTS">
            <summary>
            <para>CRC アルゴリズム "CRC-11/UMTS" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x0307</b>, <i>InitialValue </i>: <b>0x0000</b>, <i>FinalXorValue</i>: <b>0x0000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC12_CDMA2000">
            <summary>
            <para>CRC アルゴリズム "CRC-12/CDMA2000" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x0f13</b>, <i>InitialValue </i>: <b>0x0fff</b>, <i>FinalXorValue</i>: <b>0x0000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC12_DECT">
            <summary>
            <para>CRC アルゴリズム "CRC-12/DECT" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x080f</b>, <i>InitialValue </i>: <b>0x0000</b>, <i>FinalXorValue</i>: <b>0x0000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC12_GSM">
            <summary>
            <para>CRC アルゴリズム "CRC-12/GSM" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x0d31</b>, <i>InitialValue </i>: <b>0x0000</b>, <i>FinalXorValue</i>: <b>0x0fff</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC12_UMTS">
            <summary>
            <para>CRC アルゴリズム "CRC-12/UMTS" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x080f</b>, <i>InitialValue </i>: <b>0x0000</b>, <i>FinalXorValue</i>: <b>0x0000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC13_BBC">
            <summary>
            <para>CRC アルゴリズム "CRC-13/BBC" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x01cf5</b>, <i>InitialValue </i>: <b>0x00000</b>, <i>FinalXorValue</i>: <b>0x00000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC14_DARC">
            <summary>
            <para>CRC アルゴリズム "CRC-14/DARC" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x00805</b>, <i>InitialValue </i>: <b>0x00000</b>, <i>FinalXorValue</i>: <b>0x00000</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC14_GSM">
            <summary>
            <para>CRC アルゴリズム "CRC-14/GSM" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x0202d</b>, <i>InitialValue </i>: <b>0x00000</b>, <i>FinalXorValue</i>: <b>0x03fff</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC15_CAN">
            <summary>
            <para>CRC アルゴリズム "CRC-15/CAN" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x04599</b>, <i>InitialValue </i>: <b>0x00000</b>, <i>FinalXorValue</i>: <b>0x00000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC15_MPT1327">
            <summary>
            <para>CRC アルゴリズム "CRC-15/MPT1327" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x06815</b>, <i>InitialValue </i>: <b>0x00000</b>, <i>FinalXorValue</i>: <b>0x00001</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_ARC">
            <summary>
            <para>CRC アルゴリズム "CRC-16/ARC" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x08005</b>, <i>InitialValue </i>: <b>0x00000</b>, <i>FinalXorValue</i>: <b>0x00000</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_CDMA2000">
            <summary>
            <para>CRC アルゴリズム "CRC-16/CDMA2000" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x0c867</b>, <i>InitialValue </i>: <b>0x0ffff</b>, <i>FinalXorValue</i>: <b>0x00000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_CMS">
            <summary>
            <para>CRC アルゴリズム "CRC-16/CMS" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x08005</b>, <i>InitialValue </i>: <b>0x0ffff</b>, <i>FinalXorValue</i>: <b>0x00000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_DDS_110">
            <summary>
            <para>CRC アルゴリズム "CRC-16/DDS-110" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x08005</b>, <i>InitialValue </i>: <b>0x0800d</b>, <i>FinalXorValue</i>: <b>0x00000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_DECT_R">
            <summary>
            <para>CRC アルゴリズム "CRC-16/DECT-R" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x00589</b>, <i>InitialValue </i>: <b>0x00000</b>, <i>FinalXorValue</i>: <b>0x00001</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_DECT_X">
            <summary>
            <para>CRC アルゴリズム "CRC-16/DECT-X" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x00589</b>, <i>InitialValue </i>: <b>0x00000</b>, <i>FinalXorValue</i>: <b>0x00000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_DNP">
            <summary>
            <para>CRC アルゴリズム "CRC-16/DNP" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x03d65</b>, <i>InitialValue </i>: <b>0x00000</b>, <i>FinalXorValue</i>: <b>0x0ffff</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_EN_13757">
            <summary>
            <para>CRC アルゴリズム "CRC-16/EN-13757" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x03d65</b>, <i>InitialValue </i>: <b>0x00000</b>, <i>FinalXorValue</i>: <b>0x0ffff</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_GENIBUS">
            <summary>
            <para>CRC アルゴリズム "CRC-16/GENIBUS" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x01021</b>, <i>InitialValue </i>: <b>0x0ffff</b>, <i>FinalXorValue</i>: <b>0x0ffff</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_GSM">
            <summary>
            <para>CRC アルゴリズム "CRC-16/GSM" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x01021</b>, <i>InitialValue </i>: <b>0x00000</b>, <i>FinalXorValue</i>: <b>0x0ffff</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_IBM_3740">
            <summary>
            <para>CRC アルゴリズム "CRC-16/IBM-3740" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x01021</b>, <i>InitialValue </i>: <b>0x0ffff</b>, <i>FinalXorValue</i>: <b>0x00000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_IBM_SDLC">
            <summary>
            <para>CRC アルゴリズム "CRC-16/IBM-SDLC" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x01021</b>, <i>InitialValue </i>: <b>0x0ffff</b>, <i>FinalXorValue</i>: <b>0x0ffff</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_ISO_IEC_14443_3_A">
            <summary>
            <para>CRC アルゴリズム "CRC-16/ISO-IEC-14443-3-A" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x01021</b>, <i>InitialValue </i>: <b>0x0c6c6</b>, <i>FinalXorValue</i>: <b>0x00000</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_KERMIT">
            <summary>
            <para>CRC アルゴリズム "CRC-16/KERMIT" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x01021</b>, <i>InitialValue </i>: <b>0x00000</b>, <i>FinalXorValue</i>: <b>0x00000</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_LJ1200">
            <summary>
            <para>CRC アルゴリズム "CRC-16/LJ1200" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x06f63</b>, <i>InitialValue </i>: <b>0x00000</b>, <i>FinalXorValue</i>: <b>0x00000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_MAXIM_DOW">
            <summary>
            <para>CRC アルゴリズム "CRC-16/MAXIM-DOW" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x08005</b>, <i>InitialValue </i>: <b>0x00000</b>, <i>FinalXorValue</i>: <b>0x0ffff</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_MCRF4XX">
            <summary>
            <para>CRC アルゴリズム "CRC-16/MCRF4XX" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x01021</b>, <i>InitialValue </i>: <b>0x0ffff</b>, <i>FinalXorValue</i>: <b>0x00000</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_MODBUS">
            <summary>
            <para>CRC アルゴリズム "CRC-16/MODBUS" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x08005</b>, <i>InitialValue </i>: <b>0x0ffff</b>, <i>FinalXorValue</i>: <b>0x00000</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_NRSC_5">
            <summary>
            <para>CRC アルゴリズム "CRC-16/NRSC-5" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x0080b</b>, <i>InitialValue </i>: <b>0x0ffff</b>, <i>FinalXorValue</i>: <b>0x00000</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_OPENSAFETY_A">
            <summary>
            <para>CRC アルゴリズム "CRC-16/OPENSAFETY-A" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x05935</b>, <i>InitialValue </i>: <b>0x00000</b>, <i>FinalXorValue</i>: <b>0x00000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_OPENSAFETY_B">
            <summary>
            <para>CRC アルゴリズム "CRC-16/OPENSAFETY-B" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x0755b</b>, <i>InitialValue </i>: <b>0x00000</b>, <i>FinalXorValue</i>: <b>0x00000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_PROFIBUS">
            <summary>
            <para>CRC アルゴリズム "CRC-16/PROFIBUS" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x01dcf</b>, <i>InitialValue </i>: <b>0x0ffff</b>, <i>FinalXorValue</i>: <b>0x0ffff</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_RIELLO">
            <summary>
            <para>CRC アルゴリズム "CRC-16/RIELLO" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x01021</b>, <i>InitialValue </i>: <b>0x0b2aa</b>, <i>FinalXorValue</i>: <b>0x00000</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_SPI_FUJITSU">
            <summary>
            <para>CRC アルゴリズム "CRC-16/SPI-FUJITSU" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x01021</b>, <i>InitialValue </i>: <b>0x01d0f</b>, <i>FinalXorValue</i>: <b>0x00000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_T10_DIF">
            <summary>
            <para>CRC アルゴリズム "CRC-16/T10-DIF" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x08bb7</b>, <i>InitialValue </i>: <b>0x00000</b>, <i>FinalXorValue</i>: <b>0x00000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_TELEDISK">
            <summary>
            <para>CRC アルゴリズム "CRC-16/TELEDISK" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x0a097</b>, <i>InitialValue </i>: <b>0x00000</b>, <i>FinalXorValue</i>: <b>0x00000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_TMS37157">
            <summary>
            <para>CRC アルゴリズム "CRC-16/TMS37157" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x01021</b>, <i>InitialValue </i>: <b>0x089ec</b>, <i>FinalXorValue</i>: <b>0x00000</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_UMTS">
            <summary>
            <para>CRC アルゴリズム "CRC-16/UMTS" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x08005</b>, <i>InitialValue </i>: <b>0x00000</b>, <i>FinalXorValue</i>: <b>0x00000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_USB">
            <summary>
            <para>CRC アルゴリズム "CRC-16/USB" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x08005</b>, <i>InitialValue </i>: <b>0x0ffff</b>, <i>FinalXorValue</i>: <b>0x0ffff</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC16_XMODEM">
            <summary>
            <para>CRC アルゴリズム "CRC-16/XMODEM" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x01021</b>, <i>InitialValue </i>: <b>0x00000</b>, <i>FinalXorValue</i>: <b>0x00000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC17_CAN_FD">
            <summary>
            <para>CRC アルゴリズム "CRC-17/CAN-FD" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x01685b</b>, <i>InitialValue </i>: <b>0x000000</b>, <i>FinalXorValue</i>: <b>0x000000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC21_CAN_FD">
            <summary>
            <para>CRC アルゴリズム "CRC-21/CAN-FD" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x0102899</b>, <i>InitialValue </i>: <b>0x0000000</b>, <i>FinalXorValue</i>: <b>0x0000000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC24_BLE">
            <summary>
            <para>CRC アルゴリズム "CRC-24/BLE" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x000065b</b>, <i>InitialValue </i>: <b>0x0555555</b>, <i>FinalXorValue</i>: <b>0x0000000</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC24_FLEXRAY_A">
            <summary>
            <para>CRC アルゴリズム "CRC-24/FLEXRAY-A" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x05d6dcb</b>, <i>InitialValue </i>: <b>0x0fedcba</b>, <i>FinalXorValue</i>: <b>0x0000000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC24_FLEXRAY_B">
            <summary>
            <para>CRC アルゴリズム "CRC-24/FLEXRAY-B" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x05d6dcb</b>, <i>InitialValue </i>: <b>0x0abcdef</b>, <i>FinalXorValue</i>: <b>0x0000000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC24_INTERLAKEN">
            <summary>
            <para>CRC アルゴリズム "CRC-24/INTERLAKEN" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x0328b63</b>, <i>InitialValue </i>: <b>0x0ffffff</b>, <i>FinalXorValue</i>: <b>0x0ffffff</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC24_LTE_A">
            <summary>
            <para>CRC アルゴリズム "CRC-24/LTE-A" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x0864cfb</b>, <i>InitialValue </i>: <b>0x0000000</b>, <i>FinalXorValue</i>: <b>0x0000000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC24_LTE_B">
            <summary>
            <para>CRC アルゴリズム "CRC-24/LTE-B" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x0800063</b>, <i>InitialValue </i>: <b>0x0000000</b>, <i>FinalXorValue</i>: <b>0x0000000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC24_OPENPGP">
            <summary>
            <para>CRC アルゴリズム "CRC-24/OPENPGP" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x0864cfb</b>, <i>InitialValue </i>: <b>0x0b704ce</b>, <i>FinalXorValue</i>: <b>0x0000000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC24_OS_9">
            <summary>
            <para>CRC アルゴリズム "CRC-24/OS-9" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x0800063</b>, <i>InitialValue </i>: <b>0x0ffffff</b>, <i>FinalXorValue</i>: <b>0x0ffffff</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC30_CDMA">
            <summary>
            <para>CRC アルゴリズム "CRC-30/CDMA" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x02030b9c7</b>, <i>InitialValue </i>: <b>0x03fffffff</b>, <i>FinalXorValue</i>: <b>0x03fffffff</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC31_PHILIPS">
            <summary>
            <para>CRC アルゴリズム "CRC-31/PHILIPS" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x004c11db7</b>, <i>InitialValue </i>: <b>0x07fffffff</b>, <i>FinalXorValue</i>: <b>0x07fffffff</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC32_AIXM">
            <summary>
            <para>CRC アルゴリズム "CRC-32/AIXM" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x0814141ab</b>, <i>InitialValue </i>: <b>0x000000000</b>, <i>FinalXorValue</i>: <b>0x000000000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC32_AUTOSAR">
            <summary>
            <para>CRC アルゴリズム "CRC-32/AUTOSAR" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x0f4acfb13</b>, <i>InitialValue </i>: <b>0x0ffffffff</b>, <i>FinalXorValue</i>: <b>0x0ffffffff</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC32_BASE91_D">
            <summary>
            <para>CRC アルゴリズム "CRC-32/BASE91-D" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x0a833982b</b>, <i>InitialValue </i>: <b>0x0ffffffff</b>, <i>FinalXorValue</i>: <b>0x0ffffffff</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC32_BZIP2">
            <summary>
            <para>CRC アルゴリズム "CRC-32/BZIP2" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x004c11db7</b>, <i>InitialValue </i>: <b>0x0ffffffff</b>, <i>FinalXorValue</i>: <b>0x0ffffffff</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC32_CD_ROM_EDC">
            <summary>
            <para>CRC アルゴリズム "CRC-32/CD-ROM-EDC" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x08001801b</b>, <i>InitialValue </i>: <b>0x000000000</b>, <i>FinalXorValue</i>: <b>0x000000000</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC32_CKSUM">
            <summary>
            <para>CRC アルゴリズム "CRC-32/CKSUM" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x004c11db7</b>, <i>InitialValue </i>: <b>0x000000000</b>, <i>FinalXorValue</i>: <b>0x0ffffffff</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC32_ISCSI">
            <summary>
            <para>CRC アルゴリズム "CRC-32/ISCSI" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x01edc6f41</b>, <i>InitialValue </i>: <b>0x0ffffffff</b>, <i>FinalXorValue</i>: <b>0x0ffffffff</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC32_ISO_HDLC">
            <summary>
            <para>CRC アルゴリズム "CRC-32/ISO-HDLC" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x004c11db7</b>, <i>InitialValue </i>: <b>0x0ffffffff</b>, <i>FinalXorValue</i>: <b>0x0ffffffff</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC32_JAMCRC">
            <summary>
            <para>CRC アルゴリズム "CRC-32/JAMCRC" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x004c11db7</b>, <i>InitialValue </i>: <b>0x0ffffffff</b>, <i>FinalXorValue</i>: <b>0x000000000</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC32_MPEG_2">
            <summary>
            <para>CRC アルゴリズム "CRC-32/MPEG-2" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x004c11db7</b>, <i>InitialValue </i>: <b>0x0ffffffff</b>, <i>FinalXorValue</i>: <b>0x000000000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC32_XFER">
            <summary>
            <para>CRC アルゴリズム "CRC-32/XFER" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x0000000af</b>, <i>InitialValue </i>: <b>0x000000000</b>, <i>FinalXorValue</i>: <b>0x000000000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC40_GSM">
            <summary>
            <para>CRC アルゴリズム "CRC-40/GSM" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x00004820009</b>, <i>InitialValue </i>: <b>0x00000000000</b>, <i>FinalXorValue</i>: <b>0x0ffffffffff</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC64_ECMA_182">
            <summary>
            <para>CRC アルゴリズム "CRC-64/ECMA-182" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x042f0e1eba9ea3693</b>, <i>InitialValue </i>: <b>0x00000000000000000</b>, <i>FinalXorValue</i>: <b>0x00000000000000000</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC64_GO_ISO">
            <summary>
            <para>CRC アルゴリズム "CRC-64/GO-ISO" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x0000000000000001b</b>, <i>InitialValue </i>: <b>0x0ffffffffffffffff</b>, <i>FinalXorValue</i>: <b>0x0ffffffffffffffff</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC64_WE">
            <summary>
            <para>CRC アルゴリズム "CRC-64/WE" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x042f0e1eba9ea3693</b>, <i>InitialValue </i>: <b>0x0ffffffffffffffff</b>, <i>FinalXorValue</i>: <b>0x0ffffffffffffffff</b></para>
            <para><i>ReflectInput </i>: <b>false</b>, <i>ReflectOutput</i>: <b>false</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC64_XZ">
            <summary>
            <para>CRC アルゴリズム "CRC-64/XZ" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x042f0e1eba9ea3693</b>, <i>InitialValue </i>: <b>0x0ffffffffffffffff</b>, <i>FinalXorValue</i>: <b>0x0ffffffffffffffff</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="F:CyclicRedundancyChecks.Catalog.CRC82_DARC">
            <summary>
            <para>CRC アルゴリズム "CRC-82/DARC" の仕様を表す <see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンスを取得します。( <see href="https://reveng.sourceforge.io/crc-catalogue/">Catalogue of parametrised CRC algorithms</see> )</para>
            </summary>
            <remarks>
            <para><i>Polynomial   </i>: <b>0x00308c0111011401440411</b>, <i>InitialValue </i>: <b>0x0000000000000000000000</b>, <i>FinalXorValue</i>: <b>0x0000000000000000000000</b></para>
            <para><i>ReflectInput </i>: <b>true</b>, <i>ReflectOutput</i>: <b>true</b></para>
            </remarks>
        </member>
        <member name="T:CyclicRedundancyChecks.CRC">
            <summary>
            CRC (Cyclic Redundancy Check) のすべての実装が継承する必要のある抽象基底クラスを表します。
            </summary>
        </member>
        <member name="M:CyclicRedundancyChecks.CRC.Create(System.Int32,System.UInt64,System.UInt64,System.UInt64,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            CRC アルゴリズムで使用する各パラメータに適した <see cref="T:CyclicRedundancyChecks.CRC"/> の実装のインスタンスを作成します。
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="bitWidth"/> が 1 未満です。</exception>
            <param name="bitWidth">ビットサイズ。</param>
            <param name="polynomial">生成多項式。</param>
            <param name="initialValue">初期値。</param>
            <param name="finalXorValue">計算の最後に実装される XOR 演算で使用する値。</param>
            <param name="reflectInput">計算時に入力データのビット順反転をするかどうか。反転する場合は <see langword="true"/>、反転しない場合は <see langword="false"/>。</param>
            <param name="reflectOutput">計算の最後にビット順反転をするかどうか。反転する場合は <see langword="true"/>、反転しない場合は <see langword="false"/>。</param>
            <param name="isBigEndian">計算結果のCRC値をビッグエンディアン順に <see cref="T:System.Byte"/> 配列に格納する場合は <see langword="true"/>、リトルエンディアン順に格納する場合は <see langword="false"/> を指定します。</param>
            <param name="useLookupTable">
            <para>ルックアップテーブルを使用した計算をする場合は <see langword="true"/>、使用しない場合は <see langword="false"/> を指定します。</para>
            <para>使用する場合、事前にビットパターンの計算テーブルを生成します。これにより計算手順の簡略化が行われ、パフォーマンスが向上する場合があります。</para>
            <para>入力データサイズが合計 255 バイト以下の場合に限り、テーブルを使用しない方がパフォーマンスの期待値は高くなります。</para>
            </param>
            <returns><see cref="T:CyclicRedundancyChecks.CRC"/> の実装のインスタンス。</returns>
        </member>
        <member name="M:CyclicRedundancyChecks.CRC.Create(System.Int32,System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            CRC アルゴリズムで使用する各パラメータに適した <see cref="T:CyclicRedundancyChecks.CRC"/> の実装のインスタンスを作成します。
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="bitWidth"/> が 1 未満です。</exception>
            <param name="bitWidth">ビットサイズ。</param>
            <param name="polynomial">生成多項式。</param>
            <param name="initialValue">初期値。</param>
            <param name="finalXorValue">計算の最後に実装される XOR 演算で使用する値。</param>
            <param name="reflectInput">計算時に入力データのビット順反転をするかどうか。反転する場合は <see langword="true"/>、反転しない場合は <see langword="false"/>。</param>
            <param name="reflectOutput">計算の最後にビット順反転をするかどうか。反転する場合は <see langword="true"/>、反転しない場合は <see langword="false"/>。</param>
            <param name="isBigEndian">計算結果のCRC値をビッグエンディアン順に <see cref="T:System.Byte"/> 配列に格納する場合は <see langword="true"/>、リトルエンディアン順に格納する場合は <see langword="false"/> を指定します。</param>
            <param name="useLookupTable">
            <para>ルックアップテーブルを使用した計算をする場合は <see langword="true"/>、使用しない場合は <see langword="false"/> を指定します。</para>
            <para>使用する場合、事前にビットパターンの計算テーブルを生成します。これにより計算手順の簡略化が行われ、パフォーマンスが向上する場合があります。</para>
            <para>入力データサイズが合計 255 バイト以下の場合に限り、テーブルを使用しない方がパフォーマンスの期待値は高くなります。</para>
            </param>
            <returns><see cref="T:CyclicRedundancyChecks.CRC"/> の実装のインスタンス。</returns>
        </member>
        <member name="M:CyclicRedundancyChecks.CRC.Create(CyclicRedundancyChecks.CRCSpec,System.Boolean,System.Boolean)">
            <summary>
            指定した <see cref="T:CyclicRedundancyChecks.CRCSpec"/> に適した <see cref="T:CyclicRedundancyChecks.CRC"/> の実装のインスタンスを作成します。
            </summary>
            <param name="spec"><see cref="T:CyclicRedundancyChecks.CRCSpec"/> のインスタンス。</param>
            <param name="isBigEndian">計算結果のCRC値をビッグエンディアン順に <see cref="T:System.Byte"/> 配列に格納する場合は <see langword="true"/>、リトルエンディアン順に格納する場合は <see langword="false"/> を指定します。</param>
            <param name="useLookupTable">
            <para>ルックアップテーブルを使用した計算をする場合は <see langword="true"/>、使用しない場合は <see langword="false"/> を指定します。</para>
            <para>使用する場合、事前にビットパターンの計算テーブルを生成します。これにより計算手順の簡略化が行われ、パフォーマンスが向上する場合があります。</para>
            <para>入力データサイズが合計 255 バイト以下の場合に限り、テーブルを使用しない方がパフォーマンスの期待値は高くなります。</para>
            </param>
            <returns><see cref="T:CyclicRedundancyChecks.CRC"/> の実装のインスタンス。</returns>
        </member>
        <member name="T:CyclicRedundancyChecks.CRC16">
            <summary>
            CRC16 を計算する機能を提供します。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC16.BitWidth">
            <summary>
            ビットサイズ。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC16.Polynomial">
            <summary>
            生成多項式。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC16.InitialValue">
            <summary>
            初期値。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC16.FinalXorValue">
            <summary>
            計算の最後に行う XOR 演算で使用する値。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC16.ReflectInput">
            <summary>
            計算時に入力データのビット順反転をするかどうか。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC16.ReflectOutput">
            <summary>
            計算の最後にビット順反転をするかどうか。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC16.IsBigEndianResult">
            <summary>
            計算結果のCRC値をビッグエンディアン順に <see cref="T:System.Byte"/> 配列に格納するかどうか。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC16.UseLookupTable">
            <summary>
            ルックアップテーブルを使用した計算をするかどうか。
            </summary>
        </member>
        <member name="M:CyclicRedundancyChecks.CRC16.#ctor(System.UInt16,System.UInt16,System.UInt16,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            各パラメータを指定して、<see cref="T:CyclicRedundancyChecks.CRC16"/> クラスの新しいインスタンスを作成します。
            </summary>
            <param name="polynomial">生成多項式。</param>
            <param name="initialValue">初期値。</param>
            <param name="finalXorValue">計算の最後に実装される XOR 演算で使用する値。</param>
            <param name="reflectInput">計算時に入力データのビット順反転をするかどうか。反転する場合は <see langword="true"/>、反転しない場合は <see langword="false"/>。</param>
            <param name="reflectOutput">計算の最後にビット順反転をするかどうか。反転する場合は <see langword="true"/>、反転しない場合は <see langword="false"/>。</param>
            <param name="isBigEndian">計算結果のCRC値をビッグエンディアン順に <see cref="T:System.Byte"/> 配列に格納する場合は <see langword="true"/>、リトルエンディアン順に格納する場合は <see langword="false"/> を指定します。</param>
            <param name="useLookupTable">
            <para>ルックアップテーブルを使用した計算をする場合は <see langword="true"/>、使用しない場合は <see langword="false"/> を指定します。</para>
            <para>使用する場合、事前にビットパターンの計算テーブルを生成します。これにより計算手順の簡略化が行われ、パフォーマンスが向上する場合があります。</para>
            <para>入力データサイズが合計 255 バイト以下の場合に限り、テーブルを使用しない方がパフォーマンスの期待値は高くなります。</para>
            </param>
        </member>
        <member name="T:CyclicRedundancyChecks.CRC32">
            <summary>
            CRC32 を計算する機能を提供します。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC32.BitWidth">
            <summary>
            ビットサイズ。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC32.Polynomial">
            <summary>
            生成多項式。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC32.InitialValue">
            <summary>
            初期値。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC32.FinalXorValue">
            <summary>
            計算の最後に行う XOR 演算で使用する値。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC32.ReflectInput">
            <summary>
            計算時に入力データのビット順反転をするかどうか。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC32.ReflectOutput">
            <summary>
            計算の最後にビット順反転をするかどうか。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC32.IsBigEndianResult">
            <summary>
            計算結果のCRC値をビッグエンディアン順に <see cref="T:System.Byte"/> 配列に格納するかどうか。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC32.UseLookupTable">
            <summary>
            ルックアップテーブルを使用した計算をするかどうか。
            </summary>
        </member>
        <member name="M:CyclicRedundancyChecks.CRC32.#ctor(System.UInt32,System.UInt32,System.UInt32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            各パラメータを指定して、<see cref="T:CyclicRedundancyChecks.CRC32"/> クラスの新しいインスタンスを作成します。
            </summary>
            <param name="polynomial">生成多項式。</param>
            <param name="initialValue">初期値。</param>
            <param name="finalXorValue">計算の最後に実装される XOR 演算で使用する値。</param>
            <param name="reflectInput">計算時に入力データのビット順反転をするかどうか。反転する場合は <see langword="true"/>、反転しない場合は <see langword="false"/>。</param>
            <param name="reflectOutput">計算の最後にビット順反転をするかどうか。反転する場合は <see langword="true"/>、反転しない場合は <see langword="false"/>。</param>
            <param name="isBigEndian">計算結果のCRC値をビッグエンディアン順に <see cref="T:System.Byte"/> 配列に格納する場合は <see langword="true"/>、リトルエンディアン順に格納する場合は <see langword="false"/> を指定します。</param>
            <param name="useLookupTable">
            <para>ルックアップテーブルを使用した計算をする場合は <see langword="true"/>、使用しない場合は <see langword="false"/> を指定します。</para>
            <para>使用する場合、事前にビットパターンの計算テーブルを生成します。これにより計算手順の簡略化が行われ、パフォーマンスが向上する場合があります。</para>
            <para>入力データサイズが合計 255 バイト以下の場合に限り、テーブルを使用しない方がパフォーマンスの期待値は高くなります。</para>
            </param>
        </member>
        <member name="T:CyclicRedundancyChecks.CRC64">
            <summary>
            CRC64 を計算する機能を提供します。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC64.BitWidth">
            <summary>
            ビットサイズ。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC64.Polynomial">
            <summary>
            生成多項式。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC64.InitialValue">
            <summary>
            初期値。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC64.FinalXorValue">
            <summary>
            計算の最後に行う XOR 演算で使用する値。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC64.ReflectInput">
            <summary>
            計算時に入力データのビット順反転をするかどうか。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC64.ReflectOutput">
            <summary>
            計算の最後にビット順反転をするかどうか。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC64.IsBigEndianResult">
            <summary>
            計算結果のCRC値をビッグエンディアン順に <see cref="T:System.Byte"/> 配列に格納するかどうか。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC64.UseLookupTable">
            <summary>
            ルックアップテーブルを使用した計算をするかどうか。
            </summary>
        </member>
        <member name="M:CyclicRedundancyChecks.CRC64.#ctor(System.UInt64,System.UInt64,System.UInt64,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            各パラメータを指定して、<see cref="T:CyclicRedundancyChecks.CRC64"/> クラスの新しいインスタンスを作成します。
            </summary>
            <param name="polynomial">生成多項式。</param>
            <param name="initialValue">初期値。</param>
            <param name="finalXorValue">計算の最後に実装される XOR 演算で使用する値。</param>
            <param name="reflectInput">計算時に入力データのビット順反転をするかどうか。反転する場合は <see langword="true"/>、反転しない場合は <see langword="false"/>。</param>
            <param name="reflectOutput">計算の最後にビット順反転をするかどうか。反転する場合は <see langword="true"/>、反転しない場合は <see langword="false"/>。</param>
            <param name="isBigEndian">計算結果のCRC値をビッグエンディアン順に <see cref="T:System.Byte"/> 配列に格納する場合は <see langword="true"/>、リトルエンディアン順に格納する場合は <see langword="false"/> を指定します。</param>
            <param name="useLookupTable">
            <para>ルックアップテーブルを使用した計算をする場合は <see langword="true"/>、使用しない場合は <see langword="false"/> を指定します。</para>
            <para>使用する場合、事前にビットパターンの計算テーブルを生成します。これにより計算手順の簡略化が行われ、パフォーマンスが向上する場合があります。</para>
            <para>入力データサイズが合計 255 バイト以下の場合に限り、テーブルを使用しない方がパフォーマンスの期待値は高くなります。</para>
            </param>
        </member>
        <member name="T:CyclicRedundancyChecks.CRC8">
            <summary>
            CRC8 を計算する機能を提供します。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC8.BitWidth">
            <summary>
            ビットサイズ。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC8.Polynomial">
            <summary>
            生成多項式。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC8.InitialValue">
            <summary>
            初期値。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC8.FinalXorValue">
            <summary>
            計算の最後に行う XOR 演算で使用する値。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC8.ReflectInput">
            <summary>
            計算時に入力データのビット順反転をするかどうか。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC8.ReflectOutput">
            <summary>
            計算の最後にビット順反転をするかどうか。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC8.IsBigEndianResult">
            <summary>
            計算結果のCRC値をビッグエンディアン順に <see cref="T:System.Byte"/> 配列に格納するかどうか。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRC8.UseLookupTable">
            <summary>
            ルックアップテーブルを使用した計算をするかどうか。
            </summary>
        </member>
        <member name="M:CyclicRedundancyChecks.CRC8.#ctor(System.Byte,System.Byte,System.Byte,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            各パラメータを指定して、<see cref="T:CyclicRedundancyChecks.CRC8"/> クラスの新しいインスタンスを作成します。
            </summary>
            <param name="polynomial">生成多項式。</param>
            <param name="initialValue">初期値。</param>
            <param name="finalXorValue">計算の最後に実装される XOR 演算で使用する値。</param>
            <param name="reflectInput">計算時に入力データのビット順反転をするかどうか。反転する場合は <see langword="true"/>、反転しない場合は <see langword="false"/>。</param>
            <param name="reflectOutput">計算の最後にビット順反転をするかどうか。反転する場合は <see langword="true"/>、反転しない場合は <see langword="false"/>。</param>
            <param name="isBigEndian">計算結果のCRC値をビッグエンディアン順に <see cref="T:System.Byte"/> 配列に格納する場合は <see langword="true"/>、リトルエンディアン順に格納する場合は <see langword="false"/> を指定します。</param>
            <param name="useLookupTable">
            <para>ルックアップテーブルを使用した計算をする場合は <see langword="true"/>、使用しない場合は <see langword="false"/> を指定します。</para>
            <para>使用する場合、事前にビットパターンの計算テーブルを生成します。これにより計算手順の簡略化が行われ、パフォーマンスが向上する場合があります。</para>
            <para>入力データサイズが合計 255 バイト以下の場合に限り、テーブルを使用しない方がパフォーマンスの期待値は高くなります。</para>
            </param>
        </member>
        <member name="T:CyclicRedundancyChecks.CRCAny">
            <summary>
            任意のビットサイズの CRC を計算する機能を提供します。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRCAny.BitWidth">
            <summary>
            ビットサイズ。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRCAny.Polynomial">
            <summary>
            生成多項式。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRCAny.InitialValue">
            <summary>
            初期値。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRCAny.FinalXorValue">
            <summary>
            計算の最後に行う XOR 演算で使用する値。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRCAny.ReflectInput">
            <summary>
            計算時に入力データのビット順反転をするかどうか。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRCAny.ReflectOutput">
            <summary>
            計算の最後にビット順反転をするかどうか。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRCAny.IsBigEndianResult">
            <summary>
            計算結果のCRC値をビッグエンディアン順に <see cref="T:System.Byte"/> 配列に格納するかどうか。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRCAny.UseLookupTable">
            <summary>
            ルックアップテーブルを使用した計算をするかどうか。
            </summary>
        </member>
        <member name="M:CyclicRedundancyChecks.CRCAny.#ctor(System.Int32,System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            各パラメータを指定して、<see cref="T:CyclicRedundancyChecks.CRC16"/> クラスの新しいインスタンスを作成します。
            </summary>
            <param name="bitWidth">ビットサイズ。</param>
            <param name="polynomial">生成多項式。</param>
            <param name="initialValue">初期値。</param>
            <param name="finalXorValue">計算の最後に実装される XOR 演算で使用する値。</param>
            <param name="reflectInput">計算時に入力データのビット順反転をするかどうか。反転する場合は <see langword="true"/>、反転しない場合は <see langword="false"/>。</param>
            <param name="reflectOutput">計算の最後にビット順反転をするかどうか。反転する場合は <see langword="true"/>、反転しない場合は <see langword="false"/>。</param>
            <param name="isBigEndian">計算結果のCRC値をビッグエンディアン順に <see cref="T:System.Byte"/> 配列に格納する場合は <see langword="true"/>、リトルエンディアン順に格納する場合は <see langword="false"/> を指定します。</param>
            <param name="useLookupTable">
            <para>ルックアップテーブルを使用した計算をする場合は <see langword="true"/>、使用しない場合は <see langword="false"/> を指定します。</para>
            <para>使用する場合、事前にビットパターンの計算テーブルを生成します。これにより計算手順の簡略化が行われ、パフォーマンスが向上する場合があります。</para>
            <para>入力データサイズが合計 255 バイト以下の場合に限り、テーブルを使用しない方がパフォーマンスの期待値は高くなります。</para>
            </param>
        </member>
        <member name="T:CyclicRedundancyChecks.CRCSpec">
            <summary>
            CRCアルゴリズムで使用されるパラメータをラップする構造体。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRCSpec.BitWidth">
            <summary>
            ビットサイズ。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRCSpec.Polynomial">
            <summary>
            生成多項式。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRCSpec.InitialValue">
            <summary>
            初期値。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRCSpec.FinalXorValue">
            <summary>
            計算の最後に行う XOR 演算で使用する値。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRCSpec.ReflectInput">
            <summary>
            計算時に入力データのビット順反転をするかどうか。
            </summary>
        </member>
        <member name="P:CyclicRedundancyChecks.CRCSpec.ReflectOutput">
            <summary>
            計算の最後にビット順反転をするかどうか。
            </summary>
        </member>
        <member name="M:CyclicRedundancyChecks.CRCSpec.#ctor(System.Int32,System.UInt64,System.UInt64,System.UInt64,System.Boolean,System.Boolean)">
            <summary>
            各パラメータを指定して、<see cref="T:CyclicRedundancyChecks.CRCSpec"/> 構造体の新しいインスタンスを作成します。
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="bitWidth"/> が 1 未満です。</exception>
            <param name="bitWidth">ビットサイズ。</param>
            <param name="polynomial">生成多項式。</param>
            <param name="initialValue">初期値。</param>
            <param name="finalXorValue">計算の最後に実装される XOR 演算で使用する値。</param>
            <param name="reflectInput">計算時に入力データのビット順反転をするかどうか。反転する場合は <see langword="true"/>、反転しない場合は <see langword="false"/>。</param>
            <param name="reflectOutput">計算の最後にビット順反転をするかどうか。反転する場合は <see langword="true"/>、反転しない場合は <see langword="false"/>。</param>
        </member>
        <member name="M:CyclicRedundancyChecks.CRCSpec.#ctor(System.Int32,System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger,System.Boolean,System.Boolean)">
            <summary>
            各パラメータを指定して、<see cref="T:CyclicRedundancyChecks.CRCSpec"/> 構造体の新しいインスタンスを作成します。
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="bitWidth"/> が 1 未満です。</exception>
            <param name="bitWidth">ビットサイズ。</param>
            <param name="polynomial">生成多項式。</param>
            <param name="initialValue">初期値。</param>
            <param name="finalXorValue">計算の最後に実装される XOR 演算で使用する値。</param>
            <param name="reflectInput">計算時に入力データのビット順反転をするかどうか。反転する場合は <see langword="true"/>、反転しない場合は <see langword="false"/>。</param>
            <param name="reflectOutput">計算の最後にビット順反転をするかどうか。反転する場合は <see langword="true"/>、反転しない場合は <see langword="false"/>。</param>
        </member>
        <member name="M:CyclicRedundancyChecks.Internal.CRCUtility.BitReflect(System.Byte,System.Int32)">
            <summary>
            <see cref="T:System.Byte"/> のビット順序を反転させます。
            </summary>
            <param name="value">反転処理の対象となる値。</param>
            <param name="bitWidth">反転対象のビット桁幅。</param>
            <returns><paramref name="value"/> の反転対象桁のビット順が反転された値。</returns>
        </member>
        <member name="M:CyclicRedundancyChecks.Internal.CRCUtility.BitReflect(System.UInt16,System.Int32)">
            <summary>
            <see cref="T:System.UInt16"/> のビット順序を反転させます。
            </summary>
            <param name="value">反転処理の対象となる値。</param>
            <param name="bitWidth">反転対象のビット桁幅。</param>
            <returns><paramref name="value"/> の反転対象桁のビット順が反転された値。</returns>
        </member>
        <member name="M:CyclicRedundancyChecks.Internal.CRCUtility.BitReflect(System.UInt32,System.Int32)">
            <summary>
            <see cref="T:System.UInt32"/> のビット順序を反転させます。
            </summary>
            <param name="value">反転処理の対象となる値。</param>
            <param name="bitWidth">反転対象のビット桁幅。</param>
            <returns><paramref name="value"/> の反転対象桁のビット順が反転された値。</returns>
        </member>
        <member name="M:CyclicRedundancyChecks.Internal.CRCUtility.BitReflect(System.UInt64,System.Int32)">
            <summary>
            <see cref="T:System.UInt64"/> のビット順序を反転させます。
            </summary>
            <param name="value">反転処理の対象となる値。</param>
            <param name="bitWidth">反転対象のビット桁幅。</param>
            <returns><paramref name="value"/> の反転対象桁のビット順が反転された値。</returns>
        </member>
        <member name="M:CyclicRedundancyChecks.Internal.CRCUtility.BitReflect(System.Numerics.BigInteger,System.Int32)">
            <summary>
            <see cref="T:System.Numerics.BigInteger"/> のビット順序を反転させます。
            </summary>
            <param name="value">反転処理の対象となる値。</param>
            <param name="bitWidth">反転対象のビット桁幅。</param>
            <returns><paramref name="value"/> の反転対象桁のビット順が反転された値。</returns>
        </member>
    </members>
</doc>
